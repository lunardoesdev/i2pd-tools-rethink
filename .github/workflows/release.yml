name: Continuous Release

on:
  workflow_run:
    workflows: ["Build on Ubuntu", "Build on macOS", "Build on macOS Legacy", "Build on FreeBSD", "Build on Windows", "Build on Windows ARM"]
    types:
      - completed
  # Allow manual triggering
  workflow_dispatch:

jobs:
  release:
    name: Create Continuous Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    # Run when triggered by workflow_run or manually
    if: ${{ github.event_name == 'workflow_run' || github.event_name == 'workflow_dispatch' }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: List downloaded artifacts
        run: |
          echo "Downloaded artifacts:"
          if [ -d "artifacts" ]; then
            find artifacts -type f
            echo ""
            echo "Artifact directories:"
            ls -la artifacts/
          else
            echo "No artifacts directory found"
          fi

      - name: Create release directory structure
        run: |
          mkdir -p releases/{linux,freebsd,macos,windows}
          
      - name: Organize Linux artifacts
        run: |
          # Find and copy Linux artifacts (Ubuntu/CMake builds)
          if [ -d "artifacts/i2pd-ubuntu" ]; then
            cp -r "artifacts/i2pd-ubuntu" "releases/linux/ubuntu" 
            echo "Copied Linux artifact: ubuntu"
            
            # Create compressed archive for Linux build
            tar -czf "i2pd-linux-ubuntu.tar.gz" -C releases/linux/ubuntu .
            echo "Created Linux archive: i2pd-linux-ubuntu.tar.gz"
          fi

      - name: Organize FreeBSD artifacts
        run: |
          # Copy FreeBSD artifacts
          if [ -d "artifacts/i2pd-freebsd" ]; then
            cp -r "artifacts/i2pd-freebsd" releases/freebsd/
            echo "Copied FreeBSD artifacts"
            
            # Create compressed archive for FreeBSD
            tar -czf i2pd-freebsd.tar.gz -C releases/freebsd i2pd-freebsd
            echo "Created FreeBSD archive: i2pd-freebsd.tar.gz"
          fi

      - name: Organize macOS artifacts
        run: |
          # Find and copy macOS (ARM) artifacts
          if [ -d "artifacts/i2pd-macos" ]; then
            cp -r "artifacts/i2pd-macos" "releases/macos/macos-arm" 
            echo "Copied macOS ARM artifact"
            
            # Create compressed archive for macOS ARM build
            tar -czf "i2pd-macos-arm.tar.gz" -C releases/macos/macos-arm .
            echo "Created macOS ARM archive: i2pd-macos-arm.tar.gz"
          fi
          
          # Find and copy macOS (Legacy/Intel) artifacts
          if [ -d "artifacts/i2pd-macos-legacy" ]; then
            cp -r "artifacts/i2pd-macos-legacy" "releases/macos/macos-legacy"
            echo "Copied macOS Legacy artifact"
            
            # Create compressed archive for macOS Legacy build
            tar -czf "i2pd-macos-legacy.tar.gz" -C releases/macos/macos-legacy .
            echo "Created macOS Legacy archive: i2pd-macos-legacy.tar.gz"
          fi

      - name: Organize Windows artifacts
        run: |
          # Find and copy Windows UCRT (x64) artifact
          if [ -d "artifacts/i2pd-windows-ucrt" ]; then
            cp -r "artifacts/i2pd-windows-ucrt" "releases/windows/ucrt" 
            echo "Copied Windows UCRT (x64) artifact"
            
            # Create ZIP archive for Windows UCRT build
            cd "releases/windows/ucrt"
            zip -r "../../i2pd-windows-ucrt.zip" *.exe
            cd ../../..
            echo "Created Windows UCRT archive: i2pd-windows-ucrt.zip"
          fi
          
          # Find and copy Windows ARM64 artifact
          if [ -d "artifacts/i2pd-windows-arm64" ]; then
            cp -r "artifacts/i2pd-windows-arm64" "releases/windows/arm64"
            echo "Copied Windows ARM64 artifact"
            
            # Create ZIP archive for Windows ARM64 build
            cd "releases/windows/arm64"
            zip -r "../../i2pd-windows-arm64.zip" *.exe
            cd ../../..
            echo "Created Windows ARM64 archive: i2pd-windows-arm64.zip"
          fi

      - name: Prepare release assets
        run: |
          echo "Listing all release assets:"
          ls -la *.tar.gz *.zip 2>/dev/null || echo "No release assets found"
          
      - name: Create or Update Release
        id: create_release
        uses: softprops/action-gh-release@v2
        if: ${{ github.event_name == 'workflow_run' || github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref_type == 'branch') }}
        with:
          tag_name: ${{ github.ref_type == 'tag' && github.ref_name || format('continuous-{0}', github.sha) }}
          name: ${{ github.ref_type == 'tag' && github.ref_name || format('Continuous Release {0}', github.sha) }}
          body: |
            Continuous Release Build
            
            Workflow Run: ${{ github.run_id }}
            Commit: ${{ github.sha }}
            
            This release contains build artifacts for multiple platforms:
            - Linux (with UPnP ON)
            - FreeBSD (with UPnP ON)
            - macOS (ARM with UPnP ON)
            - macOS (Legacy/Intel with UPnP ON)
            - Windows (UCRT x64 variant)
            - Windows (ARM64 variant)
            
            Artifacts include the main executable and all associated utilities.
          draft: false
          prerelease: true
          files: |
            *.tar.gz
            *.zip